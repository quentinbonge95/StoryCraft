version: '3.8'

services:
  backend:
    build: ./backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      - ENVIRONMENT=production
      - DEBUG=False
      - SQL_ECHO=false
    volumes:
      - storycraft_data:/db
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - storycraft-net
    depends_on:
      db:
        condition: service_healthy
      # Ollama is optional for the backend to start
      ollama:
        condition: service_started

  db:
    image: postgres:15
    env_file:
      - ./backend/.env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - storycraft-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  frontend:
    build: ./storycraft-react/frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - storycraft-net
    
  # Service to run database migrations
  db-migrate:
    build: ./backend
    working_dir: /app  # Set working directory to /app where the code is copied
    env_file:
      - ./backend/.env
    environment:
      # Set PYDANTIC_SETTINGS_MODULE to a minimal settings module
      - PYDANTIC_SETTINGS_MODULE=app.core.migration_settings
    command: sh -c "chmod +x run_migrations.sh && ./run_migrations.sh"
    volumes:
      - ./backend/run_migrations.sh:/app/run_migrations.sh
      - ./backend/alembic.ini:/app/alembic.ini
      - ./backend/alembic:/app/alembic
    depends_on:
      db:
        condition: service_healthy
    networks:
      - storycraft-net
    restart: on-failure

  # Archive the old frontend (commented out but kept for reference)
  # frontend-legacy:
  #   build: ./frontend
  #   ports:
  #     - "3000:3000"
  #   depends_on:
  #     - backend
  #   networks:
  #     - storycraft-net

  ollama:
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama:/root/.ollama
    networks:
      - storycraft-net
    # Make health check less strict
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/api/tags"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  storycraft-net:
    driver: bridge

volumes:
  ollama:
  storycraft_data:
  postgres_data: